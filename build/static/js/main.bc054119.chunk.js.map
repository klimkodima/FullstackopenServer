{"version":3,"sources":["components/Filter.js","components/Person.js","components/Persons.js","components/PersonForm.js","servises/phonebook.js","components/Notification.js","App.js","index.js"],"names":["Filter","filter","handleFilter","value","onChange","Person","name","number","deletePerson","onClick","Persons","persons","map","person","id","PersonForm","newName","newNumber","handleNumberChange","handlePersonChange","addPerson","onSubmit","type","baseUrl","axios","get","then","response","data","newObject","post","put","delete","Notification","message","messageClass","className","App","useState","setPersons","setNewName","setNewNumber","setFilter","setMessage","setMessageClass","useEffect","phonebookService","catch","error","personsToShow","toLowerCase","includes","e","target","preventDefault","personObject","existPersons","length","window","confirm","setTimeout","concat","n","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bc054119.chunk.js","sourcesContent":["import React from \"react\"\r\nconst Filter =({filter, handleFilter}) =>{\r\n    return(<div>filter shown with: <input value={filter} onChange={handleFilter}/></div>)\r\n}\r\nexport default Filter","import React from \"react\"\r\n\r\nconst Person = ({name, number, deletePerson }) => {\r\n    return (<li>{name} {number}<button onClick={deletePerson}> delete</button></li>)\r\n}\r\n\r\nexport default Person","import React from \"react\"\r\nimport Person  from \"./Person\"\r\n\r\nconst Persons = ({ persons, deletePerson }) => {\r\n  return (<ul>\r\n    {persons.map((person) => <Person key={person.id} name={person.name} number={person.number}\r\n     deletePerson={deletePerson(person.id, person.name)}/>)}\r\n   </ul>)\r\n}\r\nexport default Persons","import React from \"react\"\r\nconst PersonForm =({newName,newNumber, handleNumberChange, handlePersonChange, addPerson }) =>{\r\n    return(<form onSubmit={addPerson}>\r\n        <div>\r\n          name: <input value={newName} onChange={handlePersonChange}/>\r\n        </div>\r\n        <br/>\r\n        <div>number: <input value={newNumber} onChange={handleNumberChange}/></div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>)\r\n}\r\nexport default PersonForm","import axios from 'axios'\r\nconst baseUrl = '/api/'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl + \"people\")\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl + \"person\", newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}person/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst deletePerson = id => {\r\n  return axios.delete(`${baseUrl}people/${id}`) \r\n}\r\n\r\nexport default { getAll, create, update, deletePerson }","const Notification = ({ message, messageClass }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className={messageClass}>\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n  export default Notification","import React, { useState, useEffect } from 'react'\nimport Filter from \"./components/Filter\"\nimport Persons from './components/Persons'\nimport PersonForm from './components/PersonForm'\nimport phonebookService from \"./servises/phonebook\"\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [filter, setFilter] = useState('')\n  const [message, setMessage] = useState(null)\n  const [messageClass, setMessageClass] = useState(\"\")\n\n  useEffect(() => {\n    phonebookService.getAll().then(data => {\n      setPersons(data)\n    }).catch(error => {\n      setMessage (error.response.data.error)\n    })\n  }, [])\n\n  const addPerson = e => {\n    e.preventDefault()\n    const personObject = {\n      name: newName,\n      number: newNumber\n    }\n    const existPersons = persons.filter((person) => person.name === newName)\n    if (existPersons.length !== 0) {\n      let a = window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)\n      if (a) {\n        \n        phonebookService.update( existPersons[0].id, personObject).then( data => {\n          setPersons(persons.map(person => person.id !== existPersons[0].id ? person : data))\n          setMessageClass(\"success\")\n          setMessage(`${newName} was update successfully`)\n        }).catch(error => {\n          setMessageClass(\"error\")\n          setMessage (error.response.data.error)\n        })\n      }\n      setNewName(\"\")\n      setNewNumber(\"\")\n      setTimeout(() => {\n        setMessage(null)\n      }, 3000)\n      return\n    }\n    phonebookService.create(personObject).then(data => {\n      setPersons(persons.concat(data))\n      setMessageClass(\"success\")\n      setMessage(`${newName} was create successfully`)\n    }).catch(error => {\n      setMessageClass(\"error\")\n      setMessage (error.response.data.error);\n    })\n    setNewName(\"\")\n    setNewNumber(\"\")\n    setTimeout(() => {\n      setMessage(null)\n    }, 3000)\n  }\n\n  const deletePerson = (id, name) => () => {\n    let a = window.confirm(`Are you sure you want to delete ${name}?`);\n    if (a) {\n      phonebookService.deletePerson(id).then(\n        () => {\n          setPersons(persons.filter(n => n.id !== id));\n          setMessageClass(\"success\")\n          setMessage(`${name} was deleted successfully`)\n        }\n      ).catch(error => {\n        setMessageClass(\"error\")\n        setMessage (error.response.data.error);\n      })\n    }\n    setTimeout(() => {\n      setMessage(null)\n    }, 3000)\n  }\n\n  const handlePersonChange = e => setNewName(e.target.value)\n\n  const handleNumberChange = e => setNewNumber(e.target.value)\n\n  const handleFilter = e => setFilter(e.target.value)\n\n  const personsToShow = filter\n    ? persons.filter(person => person.name.toLowerCase().includes(filter.toLowerCase()))\n    : persons\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} messageClass={messageClass}/>\n      <Filter filter={filter} handleFilter={handleFilter} />\n      <h3>add a new</h3>\n      <PersonForm addPerson={addPerson} handlePersonChange={handlePersonChange} handleNumberChange={handleNumberChange} newName={newName} newNumber={newNumber} />\n      <h3>Numbers</h3>\n      <Persons persons={personsToShow} deletePerson={deletePerson} />\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}